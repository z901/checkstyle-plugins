name: Build / Test

on:
  push:
    branches: [ 'master', 'main' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target: [build, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project sources
      uses: actions/checkout@v4
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Run build with Gradle Wrapper
      run: ./gradlew ${{ matrix.target }}

  quality-gate:
    needs: [build]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
    - run: exit 1
      if: ${{ !success() }}

  quality-gate1:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - run: echo ok

  trigger-deploy:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() && github.event_name == 'push' }}
    needs: [build]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        token: ${{ secrets.WORKFLOW_TOKEN }}
    - run: |
       set -ex
       git merge --ff-only x-deploy
       git tag -f x-deploy
       git push origin -f x-deploy
